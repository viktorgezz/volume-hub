version: '3.8'

services:
  db-2:
    image: postgres:13
    container_name: db-2
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbit_mq_1:
    image: rabbitmq:4-management
    container_name: rabbit_mq_1
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  api-app:
    build:
      context: ./api-T-connector
      dockerfile: Dockerfile_common
    container_name: api-app
    ports:
      - "8085:8085"
    environment:
      - DATASOURCE_URL_CONNECT=${API_APP_DATASOURCE_URL_CONNECT}
      - DATASOURCE_USERNAME_CONNECT=${API_APP_DATASOURCE_USERNAME_CONNECT}
      - DATASOURCE_PASSWORD_CONNECT=${API_APP_DATASOURCE_PASSWORD_CONNECT}
      - RABBITMQ_HOST=${API_APP_RABBITMQ_HOST}
      - RABBITMQ_PORT=${API_APP_RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${API_APP_RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${API_APP_RABBITMQ_PASSWORD}
      - RABBITMQ_TEMPLATE_EXCHANGE=${API_APP_RABBITMQ_TEMPLATE_EXCHANGE}
      - RABBITMQ_TEMPLATE_QUEUE=${API_APP_RABBITMQ_TEMPLATE_QUEUE}
      - RABBITMQ_TEMPLATE_ROUTING_KEY=${API_APP_RABBITMQ_TEMPLATE_ROUTING_KEY}
      - TOKEN_T_INVEST=${API_APP_TOKEN_T_INVEST}
    depends_on:
      db-2:
        condition: service_started
      rabbit_mq_1:
        condition: service_healthy

  define-anomaly-app:
    build:
      context: ./definition-of-anomaly
      dockerfile: Dockerfile_common
    container_name: define-anomaly-app
    ports:
      - "8090:8090"
    environment:
      - DATASOURCE_URL=${DEFINE_ANOMALY_DATASOURCE_URL}
      - DATASOURCE_USERNAME=${DEFINE_ANOMALY_DATASOURCE_USERNAME}
      - DATASOURCE_PASSWORD=${DEFINE_ANOMALY_DATASOURCE_PASSWORD}
      - RABBITMQ_HOST=${DEFINE_ANOMALY_RABBITMQ_HOST}
      - RABBITMQ_PORT=${DEFINE_ANOMALY_RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${DEFINE_ANOMALY_RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${DEFINE_ANOMALY_RABBITMQ_PASSWORD}
      - RABBITMQ_TEMPLATE_EXCHANGE=${DEFINE_ANOMALY_RABBITMQ_TEMPLATE_EXCHANGE}
      - RABBITMQ_TEMPLATE_QUEUE=${DEFINE_ANOMALY_RABBITMQ_TEMPLATE_QUEUE}
      - RABBITMQ_TEMPLATE_ROUTING_KEY=${DEFINE_ANOMALY_RABBITMQ_TEMPLATE_ROUTING_KEY}
      - TELEGRAM_URI=${DEFINE_ANOMALY_TELEGRAM_URI}
      - VOLUME_URL=${DEFINE_ANOMALY_VOLUME_URL}
    depends_on:
      - api-app
      - db-2

volumes:
  postgres_data:
  rabbitmq_data:
    name: rabbitmq_data